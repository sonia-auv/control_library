%implements s215_b0_5o2qj_2_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

static const boolean_T tmp[128]{ false, false, false, false, false, false, false, false, false, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false };
%closefile localVarDecl
%assign _modelSS = ""

%if SLibCG_FcnCallArgAccessed(2,4,1,0)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,1)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,2)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,3)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,4)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,5)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,6)
%<SLibCG_AccessArg(2 ,4, 3)>
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,8)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,9)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,10)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,11)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,12)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,13)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,14)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,15)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,16)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,17)
%<SLibCG_AccessArg(2 ,4, 0)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,1,18)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif

%if SLibCG_FcnCallArgAccessed(2,4,0,0)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,1)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,3)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,4)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,5)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,6)
%<SLibCG_AccessArg(2 ,4, 3)>
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,8)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,9)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,10)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,11)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,12)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,13)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,14)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,15)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,16)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,17)
%<SLibCG_AccessArg(2 ,4, 0)>
%endif
%if SLibCG_FcnCallArgAccessed(2,4,0,18)
%<SLibCG_AccessArg(2 ,4, 3)>
%endif

/* {S!d28}MATLABSystem: '<S320>/MATLAB System1' */
/*@>1ca05ff*/for (/*@>1cc7fb3*/localB->/*@>1cc89d3*/c_k = /*@>1cc7fb0*/0; /*@>1cc7fc6*/localB->/*@>1cc89d9*/c_k < /*@>1cc7fc2*/64; /*@>1cc7fbf*/localB->/*@>1cc89d6*/c_k/*@>1cc7fcb*/++) {
    /*@>1cc3317*/localB->/*@>1cc8667*/u0/*@>1ca6398*/[/*@>1cc331e*/localB->/*@>1cc866a*/c_k]/*@>1ca05f2*/ = /*@>1cc1a89*/rtu_0/*@>1cc1a8b*/[/*@>1cc3325*/localB->/*@>1cc866d*/c_k];
}
/*  Implement algorithm. Calculate y as a function of input u and */
/*  discrete states. */
/*@>1b9fded*/if (/*@>1ca8b95*/rtu_1/*@>1c94b2f*/ < /*@>1ca8b97*/1U) {
    /*@>1cc3339*/localB->/*@>1cc8673*/b/*@>1b9fd8a*/ = /*@>1cc7e03*/0;
    /*@>1cc334b*/localB->/*@>1cc8679*/n/*@>1b9fd9b*/ = /*@>1cc7e06*/0;
} else {
    /*@>1cc3330*/localB->/*@>1cc8670*/b/*@>1b9fd87*/ = static_cast<int32_T>(/*@>1cba432*/rtu_1);
    /*@>1cc3342*/localB->/*@>1cc8676*/n/*@>1b9fd98*/ = static_cast<int32_T>(/*@>1cba43c*/rtu_1);
}
/*@>1ca0751*/for (/*@>1cc7f8e*/localB->/*@>1cc89c7*/c_k = /*@>1cc7f8b*/0; /*@>1cc7fa7*/localB->/*@>1cc89d0*/c_k < /*@>1cc7fa1*/localB->/*@>1cc89cd*/b; /*@>1cc7f9a*/localB->/*@>1cc89ca*/c_k/*@>1cc7fcc*/++) {
    /*@>1cc3376*/localB->/*@>1cc867f*/b_y_data/*@>1ca073f*/[/*@>1cc337d*/localB->/*@>1cc8682*/c_k]/*@>1ca0740*/ = static_cast<int8_T>(/*@>1cc4342*/localDW->/*@>1cc895e*/obj./*@>1cc8661*/lastMsg/*@>1cc1a95*/[/*@>1cc3384*/localB->/*@>1cc8685*/c_k]);
}
/*@>1ca0a29*/for (/*@>1cc7f69*/localB->/*@>1cc89bb*/c_k = /*@>1cc7f66*/0; /*@>1cc7f82*/localB->/*@>1cc89c4*/c_k < /*@>1cc7f7c*/localB->/*@>1cc89c1*/n; /*@>1cc7f75*/localB->/*@>1cc89be*/c_k/*@>1cc7fd0*/++) {
    /*@>1cc33a6*/localB->/*@>1cc868e*/y_data/*@>1ca0a17*/[/*@>1cc33ad*/localB->/*@>1cc8691*/c_k]/*@>1ca0a18*/ = static_cast<int8_T>(/*@>1cc33b4*/localB->/*@>1cc8694*/u0/*@>1cc1a9b*/[/*@>1cc33bb*/localB->/*@>1cc8697*/c_k]);
}
/*@>1cc339d*/localB->/*@>1cc868b*/b_bool/*@>1ba0051*/ = /*@>1ca8c61*/false;
/*@>1cc33c4*/localB->/*@>1cc869a*/d_p/*@>1ba0048*/ = (/*@>1cc33cb*/localB->/*@>1cc869d*/b/*@>1ba0079*/ == /*@>1ca8c60*/0);
/*@>1ba009f*/if (/*@>1cc33d4*/localB->/*@>1cc86a0*/d_p/*@>1cc6fdb*/ && (/*@>1cc33dd*/localB->/*@>1cc86a3*/n/*@>1c92a3e*/ == /*@>1ca8b94*/0)) {
    /*@>1cc33f6*/localB->/*@>1cc86ac*/b_bool/*@>1ba0055*/ = /*@>1ca8c5f*/true;
} else /*@>1ba00a4*/if (/*@>1cc33e6*/localB->/*@>1cc86a6*/b/*@>1ba0082*/ != /*@>1cc33ed*/localB->/*@>1cc86a9*/n) {
} else {
    /*@>1cc33ff*/localB->/*@>1cc86af*/b/*@>1ba00ac*/ = /*@>1cc7e09*/1;
    int32_T exitg1;
    do {
        exitg1 = 0;
        /*@>1ba00bc*/if (/*@>1cc3411*/localB->/*@>1cc86b5*/b/*@>1ca4688*/ - /*@>1ca8fac*/1/*@>1ba00bb*/ <= /*@>1cc3418*/localB->/*@>1cc86b8*/n/*@>1ba00b5*/ - /*@>1ca8c55*/1) {
            /*@>1ba00a6*/if (/*@>1cc342c*/localB->/*@>1cc86be*/b_y_data/*@>1cc1aa3*/[/*@>1cc3433*/localB->/*@>1cc86c1*/b - 1]/*@>1ba009a*/ != /*@>1cc343a*/localB->/*@>1cc86c4*/y_data/*@>1cc1aab*/[/*@>1cc3441*/localB->/*@>1cc86c7*/b - 1]) {
                exitg1 = 1;
            } else {
                /*@>1cc3465*/localB->/*@>1cc86d0*/b/*@>1cc7fe8*/++;
            }
        } else {
            /*@>1cc3423*/localB->/*@>1cc86bb*/b_bool/*@>1ba006c*/ = /*@>1ca8c5e*/true;
            exitg1 = 1;
        }
    } while (exitg1 == 0);
}
/*@>1b9fdf6*/if (!/*@<1b9fda4*//*@>1cc3408*/localB->/*@>1cc86b2*/b_bool) {
    /*@>1cb0b7d*/if (/*@>1ca8b91*/rtu_1/*@>1c94c25*/ < /*@>1ca8b93*/1U) {
        /*@>1cc345c*/localB->/*@>1cc86cd*/d/*@>1cb0b80*/ = /*@>1cc7e0c*/0;
    } else {
        /*@>1cc3453*/localB->/*@>1cc86ca*/d/*@>1b9fdae*/ = static_cast<int32_T>(/*@>1ca8b9e*/rtu_1);
    }
    localB->y_size_idx_1/*@>1ca0f35*/ = /*@>1cc3492*/localB->/*@>1cc86d9*/d;
/*@>1ca0f89*/    for (/*@>1cc7f44*/localB->/*@>1cc89af*/c_k = /*@>1cc7f41*/0; /*@>1cc7f5d*/localB->/*@>1cc89b8*/c_k < /*@>1cc7f57*/localB->/*@>1cc89b5*/d; /*@>1cc7f50*/localB->/*@>1cc89b2*/c_k/*@>1cc7fd4*/++) {
        /*@>1cc34af*/localB->/*@>1cc86df*/y_data[/*@>1cc34b6*/localB->/*@>1cc86e2*/c_k]/*@>1ca0f78*/ = static_cast<int8_T>(/*@>1cc34bd*/localB->/*@>1cc86e5*/u0/*@>1cc1ab1*/[/*@>1cc34c4*/localB->/*@>1cc86e8*/c_k]);
    }
    /*         %<"\%\% string2array"> */
    if (/*@>1cc34d6*/localB->/*@>1cc86eb*/d/*@>1cbbf5b*/ - /*@>1cbbf5e*/1 >= /*@>1cbbf5a*/0) {
        /*@>1cbe9ba*/std::memcpy(&/*@>1cc34df*/localB->/*@>1cc86ee*/b_varargin_1_data[/*@>1cbbf2c*/0], &/*@>1cc34e6*/localB->/*@>1cc86f1*/y_data[/*@>1cbbf3b*/0], /*@>1cc34ed*/localB->/*@>1cc86f4*/d/*@>1cbbf48*/ * /*@>1cbbf47*/sizeof(char_T));
    }
    /*@>1cc34f6*/localB->/*@>1cc86f7*/b_varargin_1_data[/*@>1cc34fd*/localB->/*@>1cc86fa*/d]/*@>1ca10db*/ = /*@>1ca8e2b*/'\x00';
    /*@>1cbdd86*/printf(/*@>1cc72ad*/"%<TLC_STR_CTX(3)>", &/*@>1cc3506*/localB->/*@>1cc86fd*/b_varargin_1_data/*@>1cb8262*/[/*@>1ca8c7a*/0]);
    /*@>1cbdd88*/fflush(/*@>1ca8c79*/stdout);
/*@>1b9fec3*/    for (/*@>1cc7eb8*/localB->/*@>1cc8982*/b = /*@>1cc7eb5*/0; /*@>1cc7ecb*/localB->/*@>1cc8988*/b < /*@>1cc7ec7*/8; /*@>1cc7ec4*/localB->/*@>1cc8985*/b/*@>1cc7fd8*/++) {
        /*@>1cc352a*/localB->/*@>1cc8706*/k/*@>1ba01a9*/ = /*@>1cc7e0f*/1;
        while/*@<1ba01ed*/ ((/*@>1cc3547*/localB->/*@>1cc870f*/k/*@>1ba01d1*/ <= localB->y_size_idx_1)/*@>1cc6fdc*/ && (/*@>1cc3557*/localB->/*@>1cc8715*/y_data[/*@>1cc355e*/localB->/*@>1cc8718*/k/*@>1cc1ab3*/ - /*@>1cc1ab6*/1]/*@>1c92b29*/ == /*@>1ca8b8f*/',')) {
            /*@>1cc3587*/localB->/*@>1cc8724*/k/*@>1cc7fd9*/++;
        }
        /*@>1cc3577*/localB->/*@>1cc871e*/itoken/*@>1ba01ba*/ = /*@>1cc357e*/localB->/*@>1cc8721*/k/*@>1ca4699*/ - /*@>1ca8fb1*/1;
        while/*@<1ba01f3*/ ((/*@>1cc35ae*/localB->/*@>1cc8730*/k/*@>1ba01dd*/ <= localB->y_size_idx_1)/*@>1cc6fdd*/ && (/*@>1cc35be*/localB->/*@>1cc8736*/y_data[/*@>1cc35c5*/localB->/*@>1cc8739*/k/*@>1cc1ac1*/ - /*@>1cc1ac4*/1]/*@>1c94c76*/ != /*@>1ca8b8e*/',')) {
            /*@>1cc35de*/localB->/*@>1cc8742*/k/*@>1cc7fda*/++;
        }
        /*@>1ba017b*/if (/*@>1cc35ce*/localB->/*@>1cc873c*/k/*@>1c92b4b*/ > localB->y_size_idx_1) {
            /*@>1cc35fe*/localB->/*@>1cc874b*/d/*@>1ba014d*/ = /*@>1cc7e15*/0;
            /*@>1cc3617*/localB->/*@>1cc8754*/n/*@>1ba0146*/ = /*@>1cc7e18*/0;
        } else {
            /*@>1cc35ee*/localB->/*@>1cc8745*/d/*@>1ba014a*/ = /*@>1cc35f5*/localB->/*@>1cc8748*/k/*@>1ca46a0*/ - /*@>1ca8fb3*/1;
            /*@>1cc3607*/localB->/*@>1cc874e*/n/*@>1ba0143*/ = localB->y_size_idx_1;
        }
        /*@>1ba0184*/if (/*@>1cc3620*/localB->/*@>1cc8757*/itoken/*@>1ca469d*/ + /*@>1ca8fb2*/1/*@>1c92b5e*/ > /*@>1cc3627*/localB->/*@>1cc875a*/k/*@>1c931cd*/ - /*@>1ca8cbb*/1) {
            /*@>1cc3640*/localB->/*@>1cc8763*/itoken/*@>1ba016d*/ = /*@>1cc7e1b*/0;
            /*@>1cc3649*/localB->/*@>1cc8766*/nread/*@>1ba0166*/ = /*@>1cc7e1e*/0;
        } else {
            /*@>1cc3630*/localB->/*@>1cc875d*/nread/*@>1ba0163*/ = /*@>1cc3637*/localB->/*@>1cc8760*/k/*@>1c92b65*/ - /*@>1ca8b87*/1;
        }
        /*@>1cc3652*/localB->/*@>1cc8769*/e/*@>1cb0e93*/[/*@>1cc3659*/localB->/*@>1cc876c*/b]/*@>1ca6fe2*/ = /*@>1ca9024*/%<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
        /*@>1cc3662*/localB->/*@>1cc876f*/loop_ub/*@>1cb3822*/ = /*@>1cc3669*/localB->/*@>1cc8772*/nread/*@>1c97c5c*/ - /*@>1cc3670*/localB->/*@>1cc8775*/itoken;
        /*@>1ba02f1*/if (/*@>1cc3679*/localB->/*@>1cc8778*/loop_ub/*@>1ba02c5*/ >= /*@>1ca8be1*/1) {
            boolean_T exitg2;
            /*@>1cc3682*/localB->/*@>1cc877b*/ntoread/*@>1ba0234*/ = /*@>1cc7e21*/0;
            /*@>1cc36a2*/localB->/*@>1cc8787*/k/*@>1ba03ac*/ = /*@>1cc7e24*/0;
            exitg2 = false;
            while/*@<1ba03c6*/ ((!exitg2) && (/*@>1cc36c6*/localB->/*@>1cc8793*/k/*@>1ca46a8*/ + /*@>1ca8fb5*/1/*@>1ba03ad*/ <= localB->loop_ub)) {
                /*@>1cc36ef*/localB->/*@>1cc87a2*/b_y_tmp/*@>1cb384a*/ = /*@>1cc36f6*/localB->/*@>1cc87a5*/y_data[/*@>1cc36fd*/localB->/*@>1cc87a8*/itoken/*@>1cc1ac9*/ + /*@>1cc3704*/localB->/*@>1cc87ab*/k];
                /*@>1ba03c7*/if (/*@>1cc1ad8*/tmp/*@>1cc1ada*/[static_cast<uint8_T>(/*@>1cc371d*/localB->/*@>1cc87b4*/b_y_tmp)/*@>1cc1ad2*/ & /*@>1cc1ad7*/127]/*@>1cc6fde*/ || (localB->b_y_tmp/*@>1ba03c1*/ == /*@>1ca8bc0*/'\x00')) {
                    /*@>1cc3761*/localB->/*@>1cc87c6*/k/*@>1cc7fdd*/++;
                } else {
                    exitg2 = true;
                }
            }
            /*@>1cc370d*/localB->/*@>1cc87ae*/unnamed_idx_1/*@>1ca150e*/ = localB->loop_ub/*@>1ca14e7*/ + /*@>1ca8e92*/2;
            localB->s1_size/*@>1ca1706*/[/*@>1ca8ea1*/0]/*@>1c9f59f*/ = /*@>1cc7e30*/1;
            localB->s1_size/*@>1ca1747*/[/*@>1ca8ea4*/1]/*@>1c9f5ab*/ = localB->loop_ub/*@>1cb46bb*/ + /*@>1cb46be*/2;
            if (/*@>1cc37a1*/localB->/*@>1cc87d8*/unnamed_idx_1/*@>1cbc86f*/ - /*@>1cbc872*/1 >= /*@>1cbc86e*/0) {
                /*@>1cbe9bc*/std::memset(&/*@>1cc37aa*/localB->/*@>1cc87db*/s1_data[/*@>1cbc846*/0], /*@>1cc7e33*/0, /*@>1cc37b1*/localB->/*@>1cc87de*/unnamed_idx_1/*@>1cbc860*/ * /*@>1cbc85f*/sizeof(char_T));
            }
            localB->y_size/*@>1ca196e*/[/*@>1ca8ed2*/0]/*@>1ca1970*/ = /*@>1cc7e36*/1;
            localB->y_size/*@>1ca1982*/[/*@>1ca8ed9*/1]/*@>1ca1984*/ = localB->loop_ub;
/*@>1ca19c2*/            for (/*@>1cc7f1f*/localB->/*@>1cc89a3*/c_k = /*@>1cc7f1c*/0; /*@>1cc7f38*/localB->/*@>1cc89ac*/c_k < localB->loop_ub; /*@>1cc7f2b*/localB->/*@>1cc89a6*/c_k/*@>1cc7fde*/++) {
                /*@>1cc3841*/localB->/*@>1cc880b*/y_data_m[/*@>1cc3848*/localB->/*@>1cc880e*/c_k]/*@>1ca19ae*/ = /*@>1cc384f*/localB->/*@>1cc8811*/y_data[/*@>1cc3856*/localB->/*@>1cc8814*/itoken/*@>1cc1ae8*/ + /*@>1cc385d*/localB->/*@>1cc8817*/c_k];
            }
            %<SLibCG_DumpSSCode("/*@[1cc7275*/",(SLibCGCallSubFcn("proc_control_readfloat_l", ["/*@>1cc89f9*/localB->/*@>1cc89f8*/s1_data", "localB->s1_size", "/*@>1cc8a10*/1", "/*@>1cc8a1b*/localB->/*@>1cc8a1a*/y_data_m", "localB->y_size", "/*@>1cc8a34*/localB->/*@>1cc8a33*/k/*@>1cc8a32*/ + /*@>1cc8a36*/1", "/*@>1cc8a42*/localB->/*@>1cc8a41*/nread/*@>1cc8a40*/ - /*@>1cc8a45*/localB->/*@>1cc8a44*/itoken", "/*@>1cc8a50*/true", "/*@>1cc8a5b*/localB->/*@>1cc8a5a*/b_s1_data", "localB->b_s1_size", "&/*@>1cc8a74*/localB->/*@>1cc8a73*/unnamed_idx_1", "&/*@>1cc8a81*/localB->/*@>1cc8a80*/b_k", "&/*@>1cc8a8e*/localB->/*@>1cc8a8d*/b_bool", "&/*@>1cc8a9b*/localB->/*@>1cc8a9a*/d_p", "&/*@>1cc8aa8*/localB->/*@>1cc8aa7*/scanned1", "&/*@>1cc8ab5*/localB->/*@>1cc8ab4*/a__1", "&/*@>1cc8ac2*/localB->/*@>1cc8ac1*/success", "/*@>1cc8acd*/%<::tSimStruct>", "/*@>1cc8ad7*/localB"], 2, 4, 0)),"/*@]*/")>;
            /*@>1cc38f4*/localB->/*@>1cc884a*/k/*@>1c9ddc3*/ = localB->b_s1_size/*@>1cc1af4*/[/*@>1cc1af1*/1]/*@>1ca46b8*/ - /*@>1ca8fb9*/1;
            if (/*@>1cc3904*/localB->/*@>1cc8850*/k >= /*@>1cbbec8*/0) {
                /*@>1cbe9be*/std::memcpy(&/*@>1cc390d*/localB->/*@>1cc8853*/s1_data[/*@>1cbbd92*/0], &/*@>1cc3914*/localB->/*@>1cc8856*/b_s1_data[/*@>1cbbda4*/0], (/*@>1cc391b*/localB->/*@>1cc8859*/k + 1)/*@>1cbbeb4*/ * /*@>1cbbeb3*/sizeof(char_T));
            }
            /*@>1cc3924*/localB->/*@>1cc885c*/k/*@>1ba0291*/ = /*@>1cc392b*/localB->/*@>1cc885f*/unnamed_idx_1;
            /*@>1ba02f9*/if (/*@>1cc3934*/localB->/*@>1cc8862*/d_p) {
                /*@>1cc393d*/localB->/*@>1cc8865*/ntoread/*@>1ba0247*/ = /*@>1cc7e39*/1;
            }
            /*@>1ba02fc*/if (/*@>1cc3946*/localB->/*@>1cc8868*/success/*@>1cc6fdf*/ && (/*@>1cc394f*/localB->/*@>1cc886b*/b_k/*@>1ba02d1*/ <= localB->loop_ub)) {
                /*@>1cc3968*/localB->/*@>1cc8874*/s1_data[/*@>1cc396f*/localB->/*@>1cc8877*/unnamed_idx_1/*@>1ca1e2f*/ - /*@>1ca8f6b*/1]/*@>1ba024d*/ = /*@>1ca8c19*/' ';
                localB->y_size/*@>1ca1ef8*/[/*@>1ca8f7a*/0]/*@>1ca1efa*/ = /*@>1cc7e3c*/1;
                localB->y_size/*@>1ca1f0c*/[/*@>1ca8f81*/1]/*@>1ca1f0e*/ = localB->loop_ub;
/*@>1ca1f4c*/                for (/*@>1cc7efa*/localB->/*@>1cc8997*/c_k = /*@>1cc7ef7*/0; /*@>1cc7f13*/localB->/*@>1cc89a0*/c_k < localB->loop_ub; /*@>1cc7f06*/localB->/*@>1cc899a*/c_k/*@>1cc7fdf*/++) {
                    /*@>1cc39f9*/localB->/*@>1cc8895*/y_data_m[/*@>1cc3a00*/localB->/*@>1cc8898*/c_k]/*@>1ca1f38*/ = /*@>1cc3a07*/localB->/*@>1cc889b*/y_data[/*@>1cc3a0e*/localB->/*@>1cc889e*/itoken/*@>1cc1af6*/ + /*@>1cc3a15*/localB->/*@>1cc88a1*/c_k];
                }
                localB->s1_size_c/*@>1cb7390*/[/*@>1cb738b*/0]/*@>1cb7393*/ = /*@>1cc7e3f*/1;
                localB->s1_size_c/*@>1cb739c*/[/*@>1cb7397*/1]/*@>1cb739f*/ = localB->b_s1_size/*@>1cc1b02*/[/*@>1cc1aff*/1];
                /*@>1cc3ad0*/localB->/*@>1cc88e6*/c_k/*@>1cb74af*/ = localB->b_s1_size/*@>1cc1b07*/[/*@>1cc1b04*/1]/*@>1cb7493*/ - /*@>1cb7492*/1;
                if (/*@>1cc3b1b*/localB->/*@>1cc8901*/c_k >= /*@>1cbbea2*/0) {
                    /*@>1cbe9c0*/std::memcpy(&/*@>1cc3b24*/localB->/*@>1cc8904*/b_s1_data[/*@>1cbbcaf*/0], &/*@>1cc3b2b*/localB->/*@>1cc8907*/s1_data[/*@>1cbbcc1*/0], (/*@>1cc3b32*/localB->/*@>1cc890a*/c_k + 1)/*@>1cbbe8e*/ * /*@>1cbbe8d*/sizeof(char_T));
                }
                %<SLibCG_DumpSSCode("/*@[1cc729e*/",(SLibCGCallSubFcn("proc_control_readfloat_l", ["/*@>1cc8ae2*/localB->/*@>1cc8ae1*/b_s1_data", "localB->s1_size_c", "/*@>1cc8afb*/localB->/*@>1cc8afa*/unnamed_idx_1/*@>1cc8af9*/ + /*@>1cc8afd*/1", "/*@>1cc8b08*/localB->/*@>1cc8b07*/y_data_m", "localB->y_size", "/*@>1cc8b20*/localB->/*@>1cc8b1f*/b_k", "/*@>1cc8b2d*/localB->/*@>1cc8b2c*/nread/*@>1cc8b2b*/ - /*@>1cc8b30*/localB->/*@>1cc8b2f*/itoken", "/*@>1cc8b3b*/true", "/*@>1cc8b46*/localB->/*@>1cc8b45*/s1_data", "localB->s1_size", "&/*@>1cc8b5f*/localB->/*@>1cc8b5e*/k", "&/*@>1cc8b6c*/localB->/*@>1cc8b6b*/c_k", "&/*@>1cc8b79*/localB->/*@>1cc8b78*/a__1", "&/*@>1cc8b86*/localB->/*@>1cc8b85*/success", "&/*@>1cc8b93*/localB->/*@>1cc8b92*/scanned2", "&/*@>1cc8ba0*/localB->/*@>1cc8b9f*/foundsign", "&/*@>1cc8bad*/localB->/*@>1cc8bac*/c_success", "/*@>1cc8bb8*/%<::tSimStruct>", "/*@>1cc8bc2*/localB"], 2, 4, 1)),"/*@]*/")>;
                /*@>1ba0304*/if (/*@>1cc3bd0*/localB->/*@>1cc8940*/success) {
                    /*@>1cc3bd9*/localB->/*@>1cc8943*/ntoread/*@>1cc7fe0*/++;
                }
                /*@>1ba0307*/if (/*@>1cc3be9*/localB->/*@>1cc8946*/c_success/*@>1cc6fe0*/ && (/*@>1cc3bf2*/localB->/*@>1cc8949*/c_k/*@>1ba02e0*/ > localB->loop_ub)/*@>1cc6fe1*/ && (static_cast<boolean_T>(/*@>1cc3c02*/localB->/*@>1cc894f*/b_bool/*@>1ca9716*/ ^ /*@>1cc3c09*/localB->/*@>1cc8952*/a__1))/*@>1cc6fe2*/ && /*@>1cc3c12*/localB->/*@>1cc8955*/foundsign) {
                    /*@>1cc3c24*/localB->/*@>1cc895b*/success/*@>1ba02bc*/ = /*@>1ca8be8*/true;
                } else {
                    /*@>1cc3c1b*/localB->/*@>1cc8958*/success/*@>1ba02b9*/ = /*@>1ca8be9*/false;
                }
            } else {
                /*@>1cc395f*/localB->/*@>1cc8871*/scanned2/*@>1ba0265*/ = /*@>1ca8c10*/0.0;
            }
            /*@>1ba0315*/if (/*@>1cc3981*/localB->/*@>1cc887a*/success) {
                /*@>1cc3993*/localB->/*@>1cc8880*/s1_data[/*@>1cc399a*/localB->/*@>1cc8883*/k/*@>1ca1fc9*/ - /*@>1ca8f9f*/1]/*@>1ba026c*/ = /*@>1ca8be2*/'\x00';
                /*@>1ba0317*/if (/*@>1cc39b3*/localB->/*@>1cc888c*/ntoread/*@>1ba02ea*/ == /*@>1ca8bdf*/2) {
                    /*@>1cc3a35*/localB->/*@>1cc88ad*/nread/*@>1ba03d4*/ = /*@>1cbde24*/sscanf(&/*@>1cc3a3c*/localB->/*@>1cc88b0*/s1_data/*@>1cb8662*/[/*@>1ca8fa7*/0], /*@>1cc72b9*/"%<TLC_STR_CTX(4)>", &/*@>1cc3a43*/localB->/*@>1cc88b3*/scanned1, &/*@>1cc3a4a*/localB->/*@>1cc88b6*/scanned2);
                    /*@>1ba03f8*/if (/*@>1cc3a6e*/localB->/*@>1cc88c2*/nread/*@>1cb6e1a*/ != /*@>1ca8bad*/2) {
                        /*@>1cc3ac7*/localB->/*@>1cc88e3*/scanned1/*@>1ba03e0*/ = /*@>1ca8baf*/%<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
                        /*@>1cc3b12*/localB->/*@>1cc88fe*/scanned2/*@>1ba03e2*/ = /*@>1ca8bae*/%<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
                    }
                } else /*@>1ba031a*/if (/*@>1cc39cc*/localB->/*@>1cc8892*/ntoread/*@>1ba02ec*/ == /*@>1ca8bde*/1) {
                    /*@>1cc3a1e*/localB->/*@>1cc88a4*/nread/*@>1ba0406*/ = /*@>1cbde22*/sscanf(&/*@>1cc3a25*/localB->/*@>1cc88a7*/s1_data/*@>1cb8644*/[/*@>1ca8fa3*/0], /*@>1cc72bd*/"%<TLC_STR_CTX(5)>", &/*@>1cc3a2c*/localB->/*@>1cc88aa*/scanned1_k);
                    /*@>1ba031b*/if (/*@>1cc3a65*/localB->/*@>1cc88bf*/d_p) {
                        /*@>1cb0b91*/if (/*@>1cc3abe*/localB->/*@>1cc88e0*/nread/*@>1c92d2a*/ == /*@>1ca8b6f*/1) {
                            /*@>1cc3b02*/localB->/*@>1cc88f8*/scanned1/*@>1cb0b94*/ = /*@>1cc3b09*/localB->/*@>1cc88fb*/scanned1_k;
                        } else {
                            /*@>1cc3af9*/localB->/*@>1cc88f5*/scanned1/*@>1ca6b65*/ = /*@>1ca8b6c*/%<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
                        }
                    } else /*@>1cb0b8c*/if (/*@>1cc3ab5*/localB->/*@>1cc88dd*/nread/*@>1c92d20*/ == /*@>1ca8b75*/1) {
                        /*@>1cc3ae9*/localB->/*@>1cc88ef*/scanned2/*@>1cb0b8f*/ = /*@>1cc3af0*/localB->/*@>1cc88f2*/scanned1_k;
                    } else {
                        /*@>1cc3ae0*/localB->/*@>1cc88ec*/scanned2/*@>1ca6b60*/ = /*@>1ca8b72*/%<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
                    }
                }
                /*@>1cb0b87*/if (/*@>1cc3a5c*/localB->/*@>1cc88bc*/b_bool) {
                    /*@>1cc3a9e*/localB->/*@>1cc88d4*/e/*@>1cb0e8b*/[/*@>1cc3aa5*/localB->/*@>1cc88d7*/b]/*@>1cb0b8a*/ = /*@>1cc3aac*/localB->/*@>1cc88da*/scanned2;
                } else {
                    /*@>1cc3a87*/localB->/*@>1cc88cb*/e/*@>1cb0e8f*/[/*@>1cc3a8e*/localB->/*@>1cc88ce*/b]/*@>1ca6fed*/ = /*@>1cc3a95*/localB->/*@>1cc88d1*/scanned1;
                }
            }
        }
        /*@>1cc368b*/localB->/*@>1cc877e*/c_k/*@>1cb3812*/ = /*@>1cc3692*/localB->/*@>1cc8781*/n/*@>1c97cc0*/ - /*@>1cc3699*/localB->/*@>1cc8784*/d;
        /*@>1b9fec9*/if (/*@>1cc36ab*/localB->/*@>1cc878a*/c_k/*@>1c94e10*/ < /*@>1ca8b6b*/2) {
            /*@>1cc36bd*/localB->/*@>1cc8790*/itoken/*@>1b9fe78*/ = /*@>1cc7e2a*/0;
            /*@>1cc36e6*/localB->/*@>1cc879f*/ntoread/*@>1b9fe71*/ = /*@>1cc7e2d*/-1;
        } else {
            /*@>1cc36b4*/localB->/*@>1cc878d*/itoken/*@>1b9fe75*/ = /*@>1cc7e27*/1;
            /*@>1cc36d6*/localB->/*@>1cc8799*/ntoread/*@>1b9fe6e*/ = localB->c_k - 1;
        }
        /*@>1cc3741*/localB->/*@>1cc87ba*/loop_ub/*@>1cb385a*/ = /*@>1cc3748*/localB->/*@>1cc87bd*/ntoread/*@>1ca1aeb*/ - /*@>1cc374f*/localB->/*@>1cc87c0*/itoken;
        localB->n/*@>1ca1afc*/ = /*@>1cc3778*/localB->/*@>1cc87cc*/loop_ub/*@>1ca1aea*/ + /*@>1ca8f08*/1;
/*@>1ca1b69*/        for (/*@>1cc7ed8*/localB->/*@>1cc898b*/c_k = /*@>1cc7ed5*/0; /*@>1cc7eef*/localB->/*@>1cc8994*/c_k <= localB->loop_ub; /*@>1cc7ee4*/localB->/*@>1cc898e*/c_k/*@>1cc7fe2*/++) {
            /*@>1cc37c3*/localB->/*@>1cc87e4*/y_data_c[/*@>1cc37ca*/localB->/*@>1cc87e7*/c_k]/*@>1ca1b55*/ = /*@>1cc37d1*/localB->/*@>1cc87ea*/y_data[(/*@>1cc37d8*/localB->/*@>1cc87ed*/d/*@>1cc1add*/ + /*@>1cc37df*/localB->/*@>1cc87f0*/itoken)/*@>1cc1adc*/ + /*@>1cc37e6*/localB->/*@>1cc87f3*/c_k];
        }
        if (localB->n/*@>1cbbe7b*/ - /*@>1cbbe7e*/1 >= /*@>1cbbe7a*/0) {
            /*@>1cbe9c2*/std::memcpy(&/*@>1cc37f8*/localB->/*@>1cc87f6*/y_data[/*@>1cbbbe6*/0], &/*@>1cc37ff*/localB->/*@>1cc87f9*/y_data_c[/*@>1cbbbf5*/0], localB->n/*@>1cbbe68*/ * /*@>1cbbe67*/sizeof(char_T));
        }
    }
    /*@>1cbe9c4*/std::memcpy(&/*@>1cc43c0*/localDW->/*@>1cc8970*/obj./*@>1cc865e*/lastValues[0], &/*@>1cc3521*/localB->/*@>1cc8703*/e/*@>1cbbedb*/[/*@>1cbbe5a*/0], /*@>1cbbedd*/sizeof(real_T)/*@>1cc6fc7*/ << /*@>1cc6fc6*/3U);
    /*@>1cb0b82*/if (/*@>1ca8b62*/rtu_1/*@>1c94e8c*/ < /*@>1ca8b64*/1U) {
        /*@>1cc353e*/localB->/*@>1cc870c*/nread/*@>1cb0b85*/ = /*@>1cc7e12*/-1;
    } else {
        /*@>1cc3535*/localB->/*@>1cc8709*/nread/*@>1b9fdc3*/ = static_cast<int32_T>(/*@>1ca8b9a*/rtu_1)/*@>1ca4691*/ - /*@>1ca8faf*/1;
    }
/*@>1ca1290*/    for (/*@>1cc7e96*/localB->/*@>1cc8976*/c_k = /*@>1cc7e93*/0; /*@>1cc7ead*/localB->/*@>1cc897f*/c_k <= /*@>1cc7ea8*/localB->/*@>1cc897c*/nread; /*@>1cc7ea2*/localB->/*@>1cc8979*/c_k/*@>1cc7fe3*/++) {
        /*@>1cc43db*/localDW->/*@>1cc8973*/obj./*@>1cc8652*/lastMsg/*@>1ca65e5*/[/*@>1cc3597*/localB->/*@>1cc8727*/c_k]/*@>1ca127d*/ = /*@>1cc359e*/localB->/*@>1cc872a*/u0/*@>1cc1abf*/[/*@>1cc35a5*/localB->/*@>1cc872d*/c_k];
    }
}
/* {S!d30}MATLABSystem: '<S320>/MATLAB System1' */
/*@>1cbe9c6*/std::memcpy(&/*@>1cc3477*/localB->/*@>1cc86d3*/MV/*@>1cbbac3*/[/*@>1cbba96*/0], &/*@>1cc4378*/localDW->/*@>1cc8961*/obj./*@>1cc8658*/lastValues[0], /*@>1cbbad3*/sizeof(real_T)/*@>1cc6fca*/ << /*@>1cc6fc9*/3U);
/* {S!d32}MATLABSystem: '<S320>/MATLAB System1' */
/*@>1cbe9c8*/std::memcpy(&/*@>1cc4383*/localDW->/*@>1cc8964*/lastValues/*@>1cbbae8*/[/*@>1cbbab2*/0], &/*@>1cc438a*/localDW->/*@>1cc8967*/obj./*@>1cc865b*/lastValues[0], /*@>1cbbaf8*/sizeof(real_T)/*@>1cc6fcd*/ << /*@>1cc6fcc*/3U);
/*@>1cbe9ca*/std::memcpy(&/*@>1cc43a0*/localDW->/*@>1cc896a*/lastMsg/*@>1cbba2b*/[/*@>1cbba1a*/0], &/*@>1cc43a7*/localDW->/*@>1cc896d*/obj./*@>1cc8655*/lastMsg[0], /*@>1cbba3b*/sizeof(real_T)/*@>1cc6fd0*/ << /*@>1cc6fcf*/7U);
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[2].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(2, 4, 0)>
%endif
%if SLibCG_ArgAccessed(2, 4, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(2, 4, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void proc_control_MATLABSystem1(\
%assign comma = ""
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[2].CGSystemIdx].NonInlinedParentSystemIdx]
%if SLibGenSubsysFcnAsClassMemFcn(rtmArgSys)
%if SLibCG_ArgAccessed(2, 4, 0)
%assign ::CompiledModel.RTWCGModules.RTWCGModule[rtmArgSys.CGIRModuleIdx].Function[::CurrentFunctionIdx].ForbidStaticMemberDecl =  TLC_TRUE
%endif
%<SLibCG_UndoAccessArg(2, 4, 0)>\
%endif
%if SLibCG_ArgAccessed(2, 4, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("proc_control_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>const uint8_T rtu_0[64]\
%assign comma = ", "
%<comma>uint32_T rtu_1\
%assign comma = ", "
%<comma>B_MATLABSystem1_proc_control_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_proc_control_T *localDW\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(2, 4, fcnProtoType)>
%endfunction
