%implements s215_b0_5o2qj_1_Functions "C"

%function proc_control_copydigits_Fcn0(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
boolean_T exitg1;
*/*@>1c85a96*/b_k/*@>94270c*/ = /*@>1c713c0*/k;
*/*@>1c85a99*/b_idx/*@>942704*/ = /*@>1c713bc*/idx;
b_s1_size/*@>1c6bcd0*/[/*@>1c713e8*/0]/*@>1c63cfa*/ = /*@>1c8ef7d*/1;
b_s1_size/*@>1c6bd21*/[/*@>1c713ee*/1]/*@>1c63d06*/ = s1_size/*@>1c89906*/[/*@>1c89902*/1];
/*@>1c8b90b*/localB->/*@>1c8f063*/loop_ub_b/*@>1c66610*/ = s1_size/*@>1c8990c*/[/*@>1c89908*/1]/*@>1c6c4e2*/ - /*@>1c7143c*/1;
if (/*@>1c8b914*/localB->/*@>1c8f066*/loop_ub_b >= /*@>1c84390*/0) {
    /*@>1c8673b*/std::memcpy(&/*@>1c85aab*/b_s1_data[/*@>1c8435b*/0], &/*@>1c84378*/s1_data[/*@>1c8436d*/0], (/*@>1c8b91d*/localB->/*@>1c8f069*/loop_ub_b + 1)/*@>1c8437c*/ * /*@>1c8437b*/sizeof(char_T));
}
*/*@>1c85aae*/success/*@>94263d*/ = (/*@>1c713d1*/k/*@>9427c0*/ <= /*@>1c7139b*/n);
/*@>1c8b926*/localB->/*@>1c8f06c*/haspoint/*@>94263f*/ = /*@>1c713ca*/false;
exitg1 = false;
while/*@<942715*/ ((!exitg1) && ((*/*@<1c8efc8*//*@>1c85ab1*/success)/*@>1c8ecbd*/ && (*/*@<1c8efc9*//*@>1c85ab4*/b_k/*@>9427d4*/ <= /*@>1c713a3*/n))) {
    /*@>1c8b92f*/localB->/*@>1c8f06f*/c/*@>1c7bb70*/ = /*@>1c89914*/s_data[*/*@<1c8f019*//*@>1c89911*/b_k/*@>1c8990e*/ - /*@>1c89912*/1];
    /*@>942611*/if ((/*@>1c8b938*/localB->/*@>1c8f072*/c/*@>9427fb*/ >= /*@>1c713a5*/'0')/*@>1c8ecbe*/ && (localB->c/*@>942822*/ <= /*@>1c713a6*/'9')) {
        /*@>1c85ac9*/b_s1_data[*/*@<1c8efdd*//*@>1c85acc*/b_idx/*@>1c6c09f*/ - /*@>1c71435*/1]/*@>94266b*/ = localB->c;
        (*/*@>1c85acf*/b_idx)/*@>1c8efba*/++;
        (*/*@>1c8efab*/b_k)/*@>1c8efbb*/++;
    } else /*@>942612*/if (localB->c/*@>94287b*/ == /*@>1c713ab*/'.') {
        /*@>942743*/if (/*@>1c713ac*/allowpoint/*@>1c8ecbf*/ && (!/*@<94287f*//*@>1c8b965*/localB->/*@>1c8f081*/haspoint)) {
            /*@>1c85abd*/b_s1_data[*/*@<1c8efde*//*@>1c85ac0*/b_idx/*@>1c6c101*/ - /*@>1c7143b*/1]/*@>94268d*/ = /*@>1c713b0*/'.';
            (*/*@>1c85ac3*/b_idx)/*@>1c8efbc*/++;
            /*@>1c8b96e*/localB->/*@>1c8f084*/haspoint/*@>942694*/ = /*@>1c713cd*/true;
        } else {
            */*@>1c85aba*/success/*@>942747*/ = /*@>1c713c4*/false;
        }
        (*/*@>1c8efa2*/b_k)/*@>1c8efbd*/++;
    } else /*@>942613*/if (localB->c/*@>9428b3*/ == /*@>1c713b7*/',') {
        (*/*@>1c85ad5*/b_k)/*@>1c8efbe*/++;
    } else {
        exitg1 = true;
    }
}
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("proc_control_copydigits", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "proc_control_copydigits"))
%<SLibCG_AccessArg(1, 0, 12)>
%endif
%if SLibCG_ArgAccessed(1, 0, 12)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "proc_control_copydigits", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "proc_control_copydigits"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(1, 0, 12)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void proc_control_copydigits(\
%assign comma = ""
%<comma>const char_T s1_data[]\
%assign comma = ", "
%<comma>const int32_T s1_size[2]\
%assign comma = ", "
%<comma>int32_T idx\
%assign comma = ", "
%<comma>const char_T s_data[]\
%assign comma = ", "
%<comma>int32_T k\
%assign comma = ", "
%<comma>int32_T n\
%assign comma = ", "
%<comma>boolean_T allowpoint\
%assign comma = ", "
%<comma>char_T b_s1_data[]\
%assign comma = ", "
%<comma>int32_T b_s1_size[2]\
%assign comma = ", "
%<comma>int32_T *b_idx\
%assign comma = ", "
%<comma>int32_T *b_k\
%assign comma = ", "
%<comma>boolean_T *success\
%assign comma = ", "
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SLibGenSubsysFcnAsClassMemFcn(rtmArgSys)
%if SLibCG_ArgAccessed(1, 0, 12)
%assign ::CompiledModel.RTWCGModules.RTWCGModule[rtmArgSys.CGIRModuleIdx].Function[::CurrentFunctionIdx].ForbidStaticMemberDecl =  TLC_TRUE
%endif
%<SLibCG_UndoAccessArg(1, 0, 12)>\
%endif
%if SLibCG_ArgAccessed(1, 0, 12)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("proc_control_copydigits", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>B_MATLABSystem_proc_control_T *localB\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 0, fcnProtoType)>
%return fcnBuff
%endfunction

%function proc_control_readfloat_Fcn1(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
static const boolean_T tmp[128]{ false, false, false, false, false, false, false, false, false, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false };
int32_T c_s1_size[2];
int32_T c_s1_size_0[2];
int32_T d_s1_size[2];
int32_T b_k_0;
int32_T c_idx;
int32_T entryg2;
char_T c_s1_data[66];
char_T d_s1_data[66];
char_T c_idx_0;
boolean_T a__3;
boolean_T exitg1;
boolean_T isneg;
%assign _modelSS = ""

%if SLibCG_FcnCallArgAccessed(1,1,2,3)
%<SLibCG_AccessArg(1 ,1, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,2,5)
%<SLibCG_AccessArg(1 ,1, 6)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,2,9)
%<SLibCG_AccessArg(1 ,1, 10)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,2,10)
%<SLibCG_AccessArg(1 ,1, 11)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,2,12)
%<SLibCG_AccessArg(1 ,1, 17)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,2,13)
%<SLibCG_AccessArg(1 ,1, 18)>
%endif

%if SLibCG_FcnCallArgAccessed(1,1,1,3)
%<SLibCG_AccessArg(1 ,1, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,4)
%<SLibCG_AccessArg(1 ,1, 4)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,5)
%<SLibCG_AccessArg(1 ,1, 11)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,6)
%<SLibCG_AccessArg(1 ,1, 6)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,8)
%<SLibCG_AccessArg(1 ,1, 8)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,9)
%<SLibCG_AccessArg(1 ,1, 9)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,10)
%<SLibCG_AccessArg(1 ,1, 10)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,11)
%<SLibCG_AccessArg(1 ,1, 11)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,13)
%<SLibCG_AccessArg(1 ,1, 13)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,14)
%<SLibCG_AccessArg(1 ,1, 14)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,16)
%<SLibCG_AccessArg(1 ,1, 16)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,17)
%<SLibCG_AccessArg(1 ,1, 17)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,1,18)
%<SLibCG_AccessArg(1 ,1, 18)>
%endif

%if SLibCG_FcnCallArgAccessed(1,1,0,3)
%<SLibCG_AccessArg(1 ,1, 3)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,0,5)
%<SLibCG_AccessArg(1 ,1, 6)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,0,9)
%<SLibCG_AccessArg(1 ,1, 10)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,0,10)
%<SLibCG_AccessArg(1 ,1, 11)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,0,11)
%<SLibCG_AccessArg(1 ,1, 16)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,0,12)
%<SLibCG_AccessArg(1 ,1, 17)>
%endif
%if SLibCG_FcnCallArgAccessed(1,1,0,13)
%<SLibCG_AccessArg(1 ,1, 18)>
%endif

*/*@>1c8594e*/isimag/*@>940bc5*/ = /*@>1c70ee2*/false;
*/*@>1c85951*/b_finite/*@>940bc7*/ = /*@>1c70ee3*/true;
*/*@>1c85954*/nfv/*@>940bca*/ = /*@>1c70e96*/0.0;
*/*@>1c85957*/b_k/*@>1b598c4*/ = /*@>1c70fce*/k;
/*@>1c70f11*/c_idx/*@>1b598c8*/ = /*@>1c70fd0*/idx;
c_s1_size/*@>1c69fa4*/[/*@>1c71052*/0]/*@>1c6320a*/ = /*@>1c8f195*/1;
c_s1_size/*@>1c69ff5*/[/*@>1c71058*/1]/*@>1c63216*/ = s1_size/*@>1c897ae*/[/*@>1c897aa*/1];
/*@>1c71032*/b_k_0/*@>1c65d01*/ = s1_size/*@>1c897b4*/[/*@>1c897b0*/1]/*@>1c6c4a9*/ - /*@>1c711fe*/1;
if (/*@>1c84274*/b_k_0 >= /*@>1c84272*/0) {
    /*@>1c8672f*/std::memcpy(&/*@>1c84250*/c_s1_data[/*@>1c8423d*/0], &/*@>1c8425a*/s1_data[/*@>1c8424f*/0], (/*@>1c84237*/b_k_0 + 1)/*@>1c8425e*/ * /*@>1c8425d*/sizeof(char_T));
}
/*@>1c70f29*/isneg/*@>1b59919*/ = /*@>1c70f0c*/false;
*/*@>1c85960*/foundsign/*@>1b59917*/ = /*@>1c70f0b*/false;
exitg1 = false;
while/*@<1b59922*/ ((!exitg1) && (*/*@<1c8f356*//*@>1c85963*/b_k/*@>1b598b9*/ <= /*@>1c70fd2*/n)) {
    /*@>1c7b8b5*/c_idx_0/*@>1c7b8b7*/ = /*@>1c897bc*/s_data[*/*@<1c8f5b1*//*@>1c897b9*/b_k/*@>1c897b6*/ - /*@>1c897ba*/1];
    /*@>1b59923*/if (/*@>1c7b8b9*/c_idx_0/*@>1b598af*/ == /*@>1c70f26*/'-') {
        /*@>1c70f24*/isneg/*@>1b59909*/ = !/*@<1b598ae*//*@>1c70f22*/isneg;
        */*@>1c85a86*/foundsign/*@>1b59907*/ = /*@>1c70f0a*/true;
        (*/*@>1c8f264*/b_k)/*@>1c8f2b8*/++;
    } else /*@>1b59926*/if (c_idx_0/*@>1b598a3*/ == /*@>1c70f21*/',') {
        (*/*@>1c8f25b*/b_k)/*@>1c8f2b9*/++;
    } else /*@>1b59927*/if (c_idx_0/*@>1b59899*/ == /*@>1c70f20*/'+') {
        */*@>1c85a83*/foundsign/*@>1b598f9*/ = /*@>1c70f09*/true;
        (*/*@>1c8f252*/b_k)/*@>1c8f2ba*/++;
    } else /*@>1b59929*/if (!/*@<1b5988c*//*@>1c897c6*/tmp/*@>1c897c8*/[static_cast<uint8_T>(c_idx_0)/*@>1c897c0*/ & /*@>1c897c5*/127]) {
        exitg1 = true;
    } else {
        (*/*@>1c85a89*/b_k)/*@>1c8f2bc*/++;
    }
}
*/*@>1c85969*/success/*@>1b598bc*/ = (*/*@<1c8f351*//*@>1c8596c*/b_k/*@>1b59889*/ <= /*@>1c70fd4*/n);
/*@>1b59934*/if ((*/*@<1c8f359*//*@>1c8596f*/success)/*@>1c8ec8a*/ && /*@>1c70f18*/isneg) {
    /*@>1b59936*/if ((/*@>1c70fd6*/idx/*@>1b59888*/ >= /*@>1c70f06*/2)/*@>1c8ec8b*/ && (/*@>1c897cd*/s1_data[/*@>1c8d072*/idx/*@>1c8d070*/ - /*@>1c8d073*/2]/*@>1b5987f*/ == /*@>1c70f17*/'-')) {
        /*@>1c80617*/c_s1_data[/*@>1c8d078*/idx/*@>1c8d076*/ - /*@>1c8d079*/2]/*@>1b598da*/ = /*@>1c70f16*/' ';
    } else {
        /*@>1c805fa*/c_s1_data[/*@>1c710a0*/idx/*@>1c6a3ca*/ - /*@>1c710a2*/1]/*@>1b598d4*/ = /*@>1c70f15*/'-';
        /*@>1c70f13*/c_idx/*@>1b598d0*/ = /*@>1c70fd8*/idx/*@>1b5986d*/ + /*@>1c70f07*/1;
    }
}
b_s1_size/*@>1c6a368*/[/*@>1c7109c*/0]/*@>1c6332f*/ = /*@>1c8f198*/1;
b_s1_size/*@>1c6a477*/[/*@>1c710ae*/1]/*@>1c6333b*/ = s1_size/*@>1c897d5*/[/*@>1c897d1*/1];
/*@>1c71034*/b_k_0/*@>1c65e32*/ = s1_size/*@>1c897db*/[/*@>1c897d7*/1]/*@>1c6c4ac*/ - /*@>1c711ff*/1;
if (/*@>1c841e6*/b_k_0 >= /*@>1c841e4*/0) {
    /*@>1c86731*/std::memcpy(&/*@>1c85981*/b_s1_data[/*@>1c841b1*/0], &/*@>1c841cc*/c_s1_data[/*@>1c841c3*/0], (/*@>1c841ab*/b_k_0 + 1)/*@>1c841d0*/ * /*@>1c841cf*/sizeof(char_T));
}
*/*@>1c85984*/b_idx/*@>940d38*/ = /*@>1c70ed6*/c_idx;
/*@>940b96*/if (*/*@<1c8f377*//*@>1c85987*/success) {
    char_T c_idx_1;
    char_T c_idx_2;
    boolean_T guard1{false};
    boolean_T guard2{false};
    guard1 = false;
    guard2 = false;
    /*@>1b599db*/if (*/*@<1c8f378*//*@>1c8598a*/b_k/*@>1b599b5*/ <= /*@>1c70fde*/n) {
        /*@>1c7b8d5*/c_idx_0/*@>1c7b8d7*/ = /*@>1c897e3*/s_data[*/*@<1c8f5ca*//*@>1c897e0*/b_k/*@>1c897dd*/ - /*@>1c897e1*/1];
        /*@>1b599dc*/if (/*@>1c7b8d9*/c_idx_0/*@>1b599ab*/ == /*@>1c70f38*/'j') {
            guard2 = true;
        } else /*@>1b599de*/if (c_idx_0/*@>1b599a0*/ == /*@>1c70f35*/'i') {
            /*@>1b599df*/if (*/*@<1c8f37a*//*@>1c85990*/b_k/*@>1b5999d*/ >= /*@>1c70fe2*/n/*@>1b5999f*/ - /*@>1c70f30*/1) {
                guard2 = true;
            } else {
                /*@>1c70fc7*/b_k_0/*@>1b59f76*/ = */*@<1c8f37c*//*@>1c85993*/b_k;
                /*@>1c7130d*/c_idx_0/*@>1c6eb66*/ = /*@>1c7126e*/'\x00';
                while/*@<1c6eb6d*/ ((/*@>1c7126f*/b_k_0/*@>1c6eb6e*/ <= /*@>1c71271*/n)/*@>1c8ec8d*/ && (/*@>1c897fe*/s_data[/*@>1c897fb*/b_k_0/*@>1c897f9*/ - /*@>1c897fc*/1]/*@>1c6eb75*/ == /*@>1c71279*/',')) {
                    /*@>1c7127e*/b_k_0/*@>1c8f2d5*/++;
                }
                /*@>1c6eb7f*/if (/*@>1c7127a*/b_k_0/*@>1c6eb80*/ <= /*@>1c7127c*/n) {
                    /*@>1c7130f*/c_idx_0/*@>1c6eb8e*/ = /*@>1c89811*/s_data[/*@>1c8980e*/b_k_0/*@>1c8980c*/ - /*@>1c8980f*/1];
                }
                /*@>1c71289*/b_k_0/*@>1c8f2d6*/++;
                /*@>1c71311*/c_idx_1/*@>1c6eba6*/ = /*@>1c7128e*/'\x00';
                while/*@<1c6ebad*/ ((/*@>1c7128f*/b_k_0/*@>1c6ebae*/ <= /*@>1c71291*/n)/*@>1c8ec94*/ && (/*@>1c89854*/s_data[/*@>1c89851*/b_k_0/*@>1c8984f*/ - /*@>1c89852*/1]/*@>1c6ebb5*/ == /*@>1c71299*/',')) {
                    /*@>1c7129e*/b_k_0/*@>1c8f2d7*/++;
                }
                /*@>1c6ebbf*/if (/*@>1c7129a*/b_k_0/*@>1c6ebc0*/ <= /*@>1c7129c*/n) {
                    /*@>1c71313*/c_idx_1/*@>1c6ebce*/ = /*@>1c8985d*/s_data[/*@>1c8985a*/b_k_0/*@>1c89858*/ - /*@>1c8985b*/1];
                }
                /*@>1c712a9*/b_k_0/*@>1c8f2d8*/++;
                /*@>1c71315*/c_idx_2/*@>1c6ebe6*/ = /*@>1c712ae*/'\x00';
                while/*@<1c6ebed*/ ((/*@>1c712af*/b_k_0/*@>1c6ebee*/ <= /*@>1c712b1*/n)/*@>1c8ec96*/ && (/*@>1c89878*/s_data[/*@>1c89875*/b_k_0/*@>1c89873*/ - /*@>1c89876*/1]/*@>1c6ebf5*/ == /*@>1c712b9*/',')) {
                    /*@>1c712be*/b_k_0/*@>1c8f2d9*/++;
                }
                /*@>1c6ebff*/if (/*@>1c712ba*/b_k_0/*@>1c6ec00*/ <= /*@>1c712bc*/n) {
                    /*@>1c71317*/c_idx_2/*@>1c6ec0e*/ = /*@>1c89881*/s_data[/*@>1c8987e*/b_k_0/*@>1c8987c*/ - /*@>1c8987f*/1];
                }
                /*@>1b59fe2*/if ((((/*@>1c712d1*/c_idx_0/*@>1b59fa2*/ == /*@>1c70fb5*/'I')/*@>1c8ec9a*/ || (/*@>1c712d3*/c_idx_0/*@>1b59fa6*/ == /*@>1c70fb6*/'i'))/*@>1c8ec9f*/ && ((/*@>1c712d5*/c_idx_1/*@>1b59faa*/ == /*@>1c70fb7*/'N')/*@>1c8ec9e*/ || (/*@>1c712d7*/c_idx_1/*@>1b59fae*/ == /*@>1c70fb8*/'n'))/*@>1c8eca4*/ && ((/*@>1c712d9*/c_idx_2/*@>1b59fb2*/ == /*@>1c70fb9*/'F')/*@>1c8eca3*/ || (/*@>1c712db*/c_idx_2/*@>1b59fb6*/ == /*@>1c70fba*/'f')))/*@>1c8ecab*/ || (((/*@>1c712dd*/c_idx_0/*@>1b59fbb*/ == /*@>1c70fbd*/'N')/*@>1c8eca2*/ || (/*@>1c712df*/c_idx_0/*@>1b59fbf*/ == /*@>1c70fbe*/'n'))/*@>1c8eca8*/ && ((/*@>1c712e1*/c_idx_1/*@>1b59fc3*/ == /*@>1c70fbf*/'A')/*@>1c8eca7*/ || (/*@>1c712e3*/c_idx_1/*@>1b59fc7*/ == /*@>1c70fc0*/'a'))/*@>1c8ecaa*/ && ((/*@>1c712e5*/c_idx_2/*@>1b59fcb*/ == /*@>1c70fc1*/'N')/*@>1c8eca9*/ || (/*@>1c712e7*/c_idx_2/*@>1b59fcf*/ == /*@>1c70fc2*/'n')))) {
                    guard1 = true;
                } else {
                    guard2 = true;
                }
            }
        } else {
            guard1 = true;
        }
    } else {
        guard1 = true;
    }
    if (guard2) {
        /*@>940bb1*/if (/*@>1c70e99*/allowimag) {
            */*@>1c85a35*/isimag/*@>940bf0*/ = /*@>1c70ee4*/true;
            (*/*@>1c85a38*/b_k)/*@>1c8f2bd*/++;
            exitg1 = false;
            while/*@<1b59ba3*/ ((!exitg1) && (*/*@<1c8f360*//*@>1c85a3e*/b_k/*@>1b59b7d*/ <= /*@>1c70ffc*/n)) {
                /*@>1c7b8e5*/c_idx_0/*@>1c7b8e7*/ = /*@>1c89808*/s_data[*/*@<1c8f5e3*//*@>1c89805*/b_k/*@>1c89802*/ - /*@>1c89806*/1];
                /*@>1b59ba4*/if (/*@>1c89825*/tmp/*@>1c89827*/[static_cast<uint8_T>(/*@>1c89823*/c_idx_0)/*@>1c8981f*/ & /*@>1c89824*/127]/*@>1c8ec91*/ || (c_idx_0/*@>1b59b93*/ == /*@>1c70f66*/'\x00')/*@>1c8ec92*/ || (c_idx_0/*@>1b59b9d*/ == /*@>1c70f5f*/',')) {
                    (*/*@>1c85a7d*/b_k)/*@>1c8f2c0*/++;
                } else {
                    exitg1 = true;
                }
            }
            /*@>940bb7*/if ((*/*@<1c8f32d*//*@>1c85a44*/b_k/*@>9420fc*/ <= /*@>1c70e9f*/n)/*@>1c8ec90*/ && (/*@>1c89839*/s_data[*/*@<1c8f603*//*@>1c89836*/b_k/*@>1c89833*/ - /*@>1c89837*/1]/*@>942123*/ == /*@>1c70ea1*/'*')) {
                (*/*@>1c85a50*/b_k)/*@>1c8f2c1*/++;
                %<SLibCG_DumpSSCode("/*@[1c8eebd*/",(SLibCGCallSubFcn("proc_control_readfloat", ["/*@>1c8f75e*/c_s1_data", "c_s1_size", "/*@>1c8f772*/c_idx", "/*@>1c8f77c*/s_data", "s_size", "*/*@<1c8f790*//*@>1c8f791*/b_k", "/*@>1c8f79b*/n", "/*@>1c8f7a5*/false", "/*@>1c8f7af*/b_s1_data", "b_s1_size", "/*@>1c8f7c3*/b_idx", "/*@>1c8f7cd*/b_k", "&/*@>1c8f7d8*/isneg", "/*@>1c8f7e2*/b_finite", "/*@>1c8f7ec*/nfv", "&/*@>1c8f7f7*/a__3", "/*@>1c8f801*/success", "/*@>1c8f80b*/%<::tSimStruct>", "/*@>1c8f815*/localB"], 1, 1, 1)),"/*@]*/")>;
            } else {
                /*@>1c85a4a*/b_s1_data[/*@>1c71112*/c_idx/*@>1c6acf7*/ - /*@>1c71114*/1]/*@>940c2b*/ = /*@>1c70eb0*/'1';
                */*@>1c85a4d*/b_idx/*@>940c30*/ = /*@>1c70f00*/c_idx/*@>942182*/ + 1;
            }
        } else {
            */*@>1c85a32*/success/*@>940c32*/ = /*@>1c70ee8*/false;
        }
        entryg2 = 1;
    }
    if (guard1) {
        /*@>1c70f56*/b_k_0/*@>1b59a93*/ = */*@<1c8f37d*//*@>1c85996*/b_k;
        /*@>1c71301*/c_idx_0/*@>1c6ea95*/ = /*@>1c7120b*/'\x00';
        while/*@<1c6ea9c*/ ((/*@>1c7120c*/b_k_0/*@>1c6ea9d*/ <= /*@>1c7120e*/n)/*@>1c8ec8c*/ && (/*@>1c897ec*/s_data[/*@>1c897e9*/b_k_0/*@>1c897e7*/ - /*@>1c897ea*/1]/*@>1c6eaa4*/ == /*@>1c71216*/',')) {
            /*@>1c7121b*/b_k_0/*@>1c8f2c2*/++;
        }
        /*@>1c6eaae*/if (/*@>1c71217*/b_k_0/*@>1c6eaaf*/ <= /*@>1c71219*/n) {
            /*@>1c71303*/c_idx_0/*@>1c6eabd*/ = /*@>1c897f5*/s_data[/*@>1c897f2*/b_k_0/*@>1c897f0*/ - /*@>1c897f3*/1];
        }
        /*@>1c71226*/b_k_0/*@>1c8f2c3*/++;
        /*@>1c71305*/c_idx_1/*@>1c6ead5*/ = /*@>1c7122b*/'\x00';
        while/*@<1c6eadc*/ ((/*@>1c7122c*/b_k_0/*@>1c6eadd*/ <= /*@>1c7122e*/n)/*@>1c8ec93*/ && (/*@>1c89842*/s_data[/*@>1c8983f*/b_k_0/*@>1c8983d*/ - /*@>1c89840*/1]/*@>1c6eae4*/ == /*@>1c71236*/',')) {
            /*@>1c7123b*/b_k_0/*@>1c8f2c4*/++;
        }
        /*@>1c6eaee*/if (/*@>1c71237*/b_k_0/*@>1c6eaef*/ <= /*@>1c71239*/n) {
            /*@>1c71307*/c_idx_1/*@>1c6eafd*/ = /*@>1c8984b*/s_data[/*@>1c89848*/b_k_0/*@>1c89846*/ - /*@>1c89849*/1];
        }
        /*@>1c71246*/b_k_0/*@>1c8f2c5*/++;
        /*@>1c71309*/c_idx_2/*@>1c6eb15*/ = /*@>1c7124b*/'\x00';
        while/*@<1c6eb1c*/ ((/*@>1c7124c*/b_k_0/*@>1c6eb1d*/ <= /*@>1c7124e*/n)/*@>1c8ec95*/ && (/*@>1c89866*/s_data[/*@>1c89863*/b_k_0/*@>1c89861*/ - /*@>1c89864*/1]/*@>1c6eb24*/ == /*@>1c71256*/',')) {
            /*@>1c7125b*/b_k_0/*@>1c8f2c6*/++;
        }
        /*@>1c6eb2e*/if (/*@>1c71257*/b_k_0/*@>1c6eb2f*/ <= /*@>1c71259*/n) {
            /*@>1c7130b*/c_idx_2/*@>1c6eb3d*/ = /*@>1c8986f*/s_data[/*@>1c8986c*/b_k_0/*@>1c8986a*/ - /*@>1c8986d*/1];
        }
        /*@>1c71266*/b_k_0/*@>1c8f2c7*/++;
        /*@>1b59b02*/if (((/*@>1c712e9*/c_idx_0/*@>1b59abf*/ == /*@>1c70f3b*/'I')/*@>1c8ec97*/ || (/*@>1c712eb*/c_idx_0/*@>1b59ac3*/ == /*@>1c70f3c*/'i'))/*@>1c8ec99*/ && ((/*@>1c712ed*/c_idx_1/*@>1b59ac7*/ == /*@>1c70f3d*/'N')/*@>1c8ec98*/ || (/*@>1c712ef*/c_idx_1/*@>1b59acb*/ == /*@>1c70f3e*/'n'))/*@>1c8ec9d*/ && ((/*@>1c712f1*/c_idx_2/*@>1b59acf*/ == /*@>1c70f3f*/'F')/*@>1c8ec9c*/ || (/*@>1c712f3*/c_idx_2/*@>1b59ad3*/ == /*@>1c70f40*/'f'))) {
            */*@>1c859a2*/b_finite/*@>1b59a68*/ = /*@>1c70f58*/false;
            */*@>1c859a5*/nfv/*@>1b59a6a*/ = /*@>1c70f59*/%<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>;
        } else /*@>1b59b0f*/if (((/*@>1c712f5*/c_idx_0/*@>1b59ad9*/ == /*@>1c70f45*/'N')/*@>1c8ec9b*/ || (/*@>1c712f7*/c_idx_0/*@>1b59add*/ == /*@>1c70f46*/'n'))/*@>1c8eca1*/ && ((/*@>1c712f9*/c_idx_1/*@>1b59ae1*/ == /*@>1c70f47*/'A')/*@>1c8eca0*/ || (/*@>1c712fb*/c_idx_1/*@>1b59ae5*/ == /*@>1c70f48*/'a'))/*@>1c8eca6*/ && ((/*@>1c712fd*/c_idx_2/*@>1b59ae9*/ == /*@>1c70f49*/'N')/*@>1c8eca5*/ || (/*@>1c712ff*/c_idx_2/*@>1b59aed*/ == /*@>1c70f4a*/'n'))) {
            */*@>1c8599c*/b_finite/*@>1b59a84*/ = /*@>1c70f5a*/false;
            */*@>1c8599f*/nfv/*@>1b59a86*/ = /*@>1c70f5b*/%<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
        } else {
            /*@>1c70f54*/b_k_0/*@>1b59a8f*/ = */*@<1c8f37e*//*@>1c85999*/b_k;
        }
        */*@>1c859a8*/b_k/*@>940d56*/ = /*@>1c70ed8*/b_k_0;
        /*@>940b9b*/if (*/*@<1c8f341*//*@>1c859ab*/b_finite) {
            %<SLibCG_DumpSSCode("/*@[1c8ee94*/",(SLibCGCallSubFcn("proc_control_copydigits", ["/*@>1c8f81f*/c_s1_data", "c_s1_size", "/*@>1c8f833*/c_idx", "/*@>1c8f83d*/s_data", "/*@>1c8f847*/b_k_0", "/*@>1c8f851*/n", "/*@>1c8f85b*/true", "/*@>1c8f865*/d_s1_data", "d_s1_size", "/*@>1c8f879*/b_idx", "/*@>1c8f883*/b_k", "/*@>1c8f88d*/success", "/*@>1c8f897*/%<::tSimStruct>", "/*@>1c8f8a1*/localB"], 1, 1, 0)),"/*@]*/")>;
            b_s1_size/*@>1c6b0a4*/[/*@>1c7111d*/0]/*@>1c63909*/ = /*@>1c8f19b*/1;
            b_s1_size/*@>1c6b154*/[/*@>1c71129*/1]/*@>1c63915*/ = d_s1_size/*@>1c8988e*/[/*@>1c8988b*/1];
            /*@>1c816ae*/c_idx/*@>1c816b0*/ = d_s1_size/*@>1c89893*/[/*@>1c89890*/1]/*@>1c6c4af*/ - /*@>1c71200*/1;
            if (/*@>1c8412a*/c_idx >= /*@>1c84128*/0) {
                /*@>1c86733*/std::memcpy(&/*@>1c859cc*/b_s1_data[/*@>1c840f5*/0], &/*@>1c84110*/d_s1_data[/*@>1c84107*/0], (/*@>1c840ef*/c_idx + 1)/*@>1c84114*/ * /*@>1c84113*/sizeof(char_T));
            }
            /*@>940bae*/if (*/*@<1c8f347*//*@>1c859cf*/success) {
                c_s1_size/*@>1c6b515*/[/*@>1c71173*/1]/*@>1c63a50*/ = d_s1_size/*@>1c898b6*/[/*@>1c898b3*/1];
                if (c_idx >= /*@>1c840ad*/0) {
                    /*@>1c86735*/std::memcpy(&/*@>1c8408d*/c_s1_data[/*@>1c8407a*/0], &/*@>1c84095*/d_s1_data[/*@>1c8408c*/0], (c_idx + 1)/*@>1c84099*/ * /*@>1c84098*/sizeof(char_T));
                }
                /*@>1b59de7*/if (*/*@<1c8f37f*//*@>1c859d2*/b_k/*@>1b59d8b*/ <= /*@>1c70fec*/n) {
                    /*@>1c7b955*/c_idx_0/*@>1c7b957*/ = /*@>1c898dc*/s_data[*/*@<1c8f672*//*@>1c898d9*/b_k/*@>1c898d6*/ - /*@>1c898da*/1];
                    /*@>1b59de8*/if ((/*@>1c7b959*/c_idx_0/*@>1b59d95*/ == /*@>1c70f7a*/'E')/*@>1c8ecb3*/ || (c_idx_0/*@>1b59d9f*/ == /*@>1c70f7b*/'e')) {
                        int32_T loop_ub;
                        /*@>1c80ca0*/c_s1_data[*/*@<1c8f3a7*//*@>1c859d8*/b_idx/*@>1c6b921*/ - /*@>1c711c0*/1]/*@>1b59d1b*/ = /*@>1c70f7c*/'e';
                        /*@>1c70f7d*/c_idx/*@>1b59d1f*/ = */*@<1c8f3ad*//*@>1c859db*/b_idx - 1;
                        /*@>1c70f7f*/b_k_0/*@>1b59d23*/ = */*@<1c8f381*//*@>1c859de*/b_k;
                        while/*@<1b59def*/ ((/*@>1c70f81*/b_k_0/*@>1c6c4c1*/ + /*@>1c71206*/1/*@>1b59da4*/ <= /*@>1c70ff0*/n)/*@>1c8ecb4*/ && (/*@>1c898ed*/s_data[/*@>1c898eb*/b_k_0]/*@>1b59dae*/ == /*@>1c70f83*/',')) {
                            /*@>1c70f84*/b_k_0/*@>1c8f2c8*/++;
                        }
                        /*@>1b59df3*/if (/*@>1c70f88*/b_k_0/*@>1c6c4be*/ + /*@>1c71205*/1/*@>1b59db1*/ <= /*@>1c70ff2*/n) {
                            c_idx_0 = /*@>1c898f4*/s_data[/*@>1c898f2*/b_k_0];
                            /*@>1b59df4*/if (c_idx_0/*@>1b59dbb*/ == /*@>1c70f8a*/'-') {
                                /*@>1c80d9f*/c_s1_data[*/*@<1c8f3ac*//*@>1c859e1*/b_idx]/*@>1b59d41*/ = /*@>1c70f8b*/'-';
                                /*@>1c70f8c*/c_idx/*@>1b59d45*/ = */*@<1c8f389*//*@>1c859e4*/b_idx;
                                /*@>1c70f8e*/b_k_0/*@>1c8f2c9*/++;
                            } else /*@>1b59df8*/if (c_idx_0/*@>1b59dc9*/ == /*@>1c70f92*/'+') {
                                /*@>1c70f93*/b_k_0/*@>1c8f2d4*/++;
                            }
                        }
                        c_s1_size_0/*@>1c7f280*/[/*@>1c7f27b*/0]/*@>1c7f283*/ = /*@>1c8f1a1*/1;
                        c_s1_size_0/*@>1c7f28c*/[/*@>1c7f287*/1]/*@>1c7f28f*/ = d_s1_size/*@>1c898fb*/[/*@>1c898f8*/1];
                        /*@>1c7f39d*/loop_ub/*@>1c7f39f*/ = d_s1_size/*@>1c89900*/[/*@>1c898fd*/1]/*@>1c7f383*/ - /*@>1c7f382*/1;
                        if (/*@>1c84017*/loop_ub >= /*@>1c84015*/0) {
                            /*@>1c86737*/std::memcpy(&/*@>1c83ff5*/d_s1_data[/*@>1c83fe2*/0], &/*@>1c83ffd*/c_s1_data[/*@>1c83ff4*/0], (/*@>1c83fdc*/loop_ub + 1)/*@>1c84001*/ * /*@>1c84000*/sizeof(char_T));
                        }
                        %<SLibCG_DumpSSCode("/*@[1c8eee1*/",(SLibCGCallSubFcn("proc_control_copydigits", ["/*@>1c8f8ab*/d_s1_data", "c_s1_size_0", "/*@>1c8f8c0*/c_idx/*@>1c8f8bf*/ + /*@>1c8f8c1*/2", "/*@>1c8f8cb*/s_data", "/*@>1c8f8d6*/b_k_0/*@>1c8f8d5*/ + /*@>1c8f8d7*/1", "/*@>1c8f8e1*/n", "/*@>1c8f8eb*/false", "/*@>1c8f8f5*/c_s1_data", "c_s1_size", "/*@>1c8f909*/b_idx", "/*@>1c8f913*/b_k", "&/*@>1c8f91e*/isneg", "/*@>1c8f928*/%<::tSimStruct>", "/*@>1c8f932*/localB"], 1, 1, 2)),"/*@]*/")>;
                        /*@>1b59e02*/if (/*@>1c70fa8*/isneg/*@>1c8ecb5*/ && (*/*@<1c8f36e*//*@>1c859ed*/b_k/*@>1b59de1*/ > /*@>1c71021*/b_k_0/*@>1c6c4b8*/ + /*@>1c71203*/1)) {
                        } else {
                            */*@>1c859f0*/success/*@>1b59d86*/ = /*@>1c70fa1*/false;
                        }
                    }
                }
                b_s1_size/*@>1c6b943*/[/*@>1c711c3*/0]/*@>1c63bab*/ = /*@>1c8f19e*/1;
                b_s1_size/*@>1c6b995*/[/*@>1c711c9*/1]/*@>1c63bb7*/ = c_s1_size/*@>1c898e3*/[/*@>1c898e0*/1];
                /*@>1c7103a*/b_k_0/*@>1c66533*/ = c_s1_size/*@>1c898e8*/[/*@>1c898e5*/1]/*@>1c6c4c4*/ - /*@>1c71207*/1;
                if (/*@>1c83f95*/b_k_0 >= /*@>1c83f93*/0) {
                    /*@>1c86739*/std::memcpy(&/*@>1c859fc*/b_s1_data[/*@>1c83f60*/0], &/*@>1c83f7b*/c_s1_data[/*@>1c83f72*/0], (/*@>1c83f5a*/b_k_0 + 1)/*@>1c83f7f*/ * /*@>1c83f7e*/sizeof(char_T));
                }
            }
        } else /*@>940b9c*/if ((/*@>1c70ef2*/c_idx/*@>942d2f*/ >= /*@>1c70eef*/2)/*@>1c8ecac*/ && (/*@>1c89887*/c_s1_data[/*@>1c8d07e*/c_idx/*@>1c8d07c*/ - /*@>1c8d07f*/2]/*@>942d5a*/ == /*@>1c70ebb*/'-')) {
            */*@>1c859ae*/b_idx/*@>940c73*/ = /*@>1c70ef4*/c_idx/*@>942d5c*/ - 1;
            /*@>1c859b1*/b_s1_data[/*@>1c8d084*/c_idx/*@>1c8d082*/ - /*@>1c8d085*/2]/*@>940c79*/ = /*@>1c70ebe*/' ';
            */*@>1c859b4*/nfv/*@>940c7d*/ = -/*@<1c7148d*/*/*@<1c8f344*//*@>1c859b7*/nfv;
        }
        exitg1 = false;
        while/*@<1b59ca5*/ ((!exitg1) && (*/*@<1c8f362*//*@>1c859ff*/b_k/*@>1b59c7f*/ <= /*@>1c70ff8*/n)) {
            /*@>1c7b915*/c_idx_0/*@>1c7b917*/ = /*@>1c8989b*/s_data[*/*@<1c8f646*//*@>1c89898*/b_k/*@>1c89895*/ - /*@>1c89899*/1];
            /*@>1b59ca6*/if (/*@>1c898a5*/tmp/*@>1c898a7*/[static_cast<uint8_T>(/*@>1c898a3*/c_idx_0)/*@>1c8989f*/ & /*@>1c898a4*/127]/*@>1c8ecae*/ || (c_idx_0/*@>1b59c95*/ == /*@>1c70f78*/'\x00')/*@>1c8ecaf*/ || (c_idx_0/*@>1b59c9f*/ == /*@>1c70f73*/',')) {
                (*/*@>1c85a2c*/b_k)/*@>1c8f2cc*/++;
            } else {
                exitg1 = true;
            }
        }
        /*@>940ba0*/if ((*/*@<1c8f338*//*@>1c85a05*/b_k/*@>942d95*/ <= /*@>1c70ec3*/n)/*@>1c8ecad*/ && (/*@>1c898af*/s_data[*/*@<1c8f653*//*@>1c898ac*/b_k/*@>1c898a9*/ - /*@>1c898ad*/1]/*@>942dbc*/ == /*@>1c70ec5*/'*')) {
            (*/*@>1c85a0b*/b_k)/*@>1c8f2cd*/++;
            exitg1 = false;
            while/*@<1b59eb1*/ ((!exitg1) && (*/*@<1c8f36f*//*@>1c85a11*/b_k/*@>1b59e8b*/ <= /*@>1c70ffa*/n)) {
                /*@>1c7b93d*/c_idx_0/*@>1c7b93f*/ = /*@>1c898c8*/s_data[*/*@<1c8f665*//*@>1c898c5*/b_k/*@>1c898c2*/ - /*@>1c898c6*/1];
                /*@>1b59eb2*/if (/*@>1c898d2*/tmp/*@>1c898d4*/[static_cast<uint8_T>(/*@>1c898d0*/c_idx_0)/*@>1c898cc*/ & /*@>1c898d1*/127]/*@>1c8ecb1*/ || (c_idx_0/*@>1b59ea1*/ == /*@>1c70fb3*/'\x00')/*@>1c8ecb2*/ || (c_idx_0/*@>1b59eab*/ == /*@>1c70fae*/',')) {
                    (*/*@>1c85a26*/b_k)/*@>1c8f2d0*/++;
                } else {
                    exitg1 = true;
                }
            }
        }
        /*@>940ba2*/if (*/*@<1c8f33a*//*@>1c85a17*/b_k/*@>942dcc*/ <= /*@>1c70ecc*/n) {
            /*@>1c7b92d*/c_idx_0/*@>1c7b92f*/ = /*@>1c898be*/s_data[*/*@<1c8f65e*//*@>1c898bb*/b_k/*@>1c898b8*/ - /*@>1c898bc*/1];
            /*@>940da3*/if ((/*@>1c7b931*/c_idx_0/*@>942df3*/ == /*@>1c70ece*/'i')/*@>1c8ecb0*/ || (c_idx_0/*@>942e1a*/ == /*@>1c70ecf*/'j')) {
                (*/*@>1c85a1d*/b_k)/*@>1c8f2d1*/++;
                */*@>1c85a23*/isimag/*@>940cbb*/ = /*@>1c70eee*/true;
            }
        }
        entryg2 = 0;
    }
    int32_T exitg3;
    do {
        exitg3 = 0;
        if (entryg2 == 0) {
        } else {
            entryg2 = 0;
        }
        /*@>1b59c24*/if (*/*@<1c8f361*//*@>1c85a71*/b_k/*@>1b59bfe*/ <= /*@>1c70ffe*/n) {
            /*@>1c7b8f5*/c_idx_0/*@>1c7b8f7*/ = /*@>1c8981b*/s_data[*/*@<1c8f5f0*//*@>1c89818*/b_k/*@>1c89815*/ - /*@>1c89819*/1];
            /*@>1b59c25*/if (/*@>1c8982f*/tmp/*@>1c89831*/[static_cast<uint8_T>(/*@>1c8982d*/c_idx_0)/*@>1c89829*/ & /*@>1c8982e*/127]/*@>1c8ec8e*/ || (c_idx_0/*@>1b59c14*/ == /*@>1c70f6f*/'\x00')/*@>1c8ec8f*/ || (c_idx_0/*@>1b59c1e*/ == /*@>1c70f6a*/',')) {
                (*/*@>1c85a77*/b_k)/*@>1c8f2d3*/++;
            } else {
                exitg3 = 1;
            }
        } else {
            exitg3 = 1;
        }
    } while (exitg3 == 0);
}
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("proc_control_readfloat", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "proc_control_readfloat"))
%<SLibCG_AccessArg(1, 1, 17)>
%endif
%if SLibCG_ArgAccessed(1, 1, 17)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "proc_control_readfloat", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "proc_control_readfloat"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(1, 1, 17)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void proc_control_readfloat(\
%assign comma = ""
%<comma>const char_T s1_data[]\
%assign comma = ", "
%<comma>const int32_T s1_size[2]\
%assign comma = ", "
%<comma>int32_T idx\
%assign comma = ", "
%<comma>const char_T s_data[]\
%assign comma = ", "
%if SLibCG_ArgAccessed(1, 1, 4)
%<comma>const int32_T s_size[2]\
%assign comma = ", "
%endif
%<comma>int32_T k\
%assign comma = ", "
%<comma>int32_T n\
%assign comma = ", "
%<comma>boolean_T allowimag\
%assign comma = ", "
%<comma>char_T b_s1_data[]\
%assign comma = ", "
%<comma>int32_T b_s1_size[2]\
%assign comma = ", "
%<comma>int32_T *b_idx\
%assign comma = ", "
%<comma>int32_T *b_k\
%assign comma = ", "
%<comma>boolean_T *isimag\
%assign comma = ", "
%<comma>boolean_T *b_finite\
%assign comma = ", "
%<comma>real_T *nfv\
%assign comma = ", "
%<comma>boolean_T *foundsign\
%assign comma = ", "
%<comma>boolean_T *success\
%assign comma = ", "
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SLibGenSubsysFcnAsClassMemFcn(rtmArgSys)
%if SLibCG_ArgAccessed(1, 1, 17)
%assign ::CompiledModel.RTWCGModules.RTWCGModule[rtmArgSys.CGIRModuleIdx].Function[::CurrentFunctionIdx].ForbidStaticMemberDecl =  TLC_TRUE
%endif
%<SLibCG_UndoAccessArg(1, 1, 17)>\
%endif
%if SLibCG_ArgAccessed(1, 1, 17)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("proc_control_readfloat", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>B_MATLABSystem_proc_control_T *localB\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 1, fcnProtoType)>
%return fcnBuff
%endfunction

